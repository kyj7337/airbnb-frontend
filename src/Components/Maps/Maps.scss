#map {
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
}
.address-box {
  width: 800px;
  height: 40px;
  margin-bottom: 40px;
  border-radius: 5px;
  border: none;
}
.textarea-container {
  margin-top: 50px;
  .textarea-name {
    margin: 10px;
    font-size: 25px;
    font-weight: 700;
  }
  .textarea-field {
    margin-top: 20px;
    margin-left: 10px;
    width: 60%;
    height: 130px;
    font-size: 18px;
    outline: none;
    border: 0;
    border-bottom: solid 1px gray;
    resize: none;
    &:focus {
      border-bottom: solid 5px#008489;
    }
  }
}

// import React, { Component } from "react";
// import "./Maps.scss";

// export class Maps extends Component {
//   state = {
//     search: "",
//     loc: [],
//     latlng: []
//   };
//   input = null;

//   componentDidMount() {
//     const { kakao } = window;
//     var mapContainer = this.input, // 지도를 표시할 div
//       mapOption = {
//         center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표
//         level: 3 // 지도의 확대 레벨
//       };

//     // 지도를 생성합니다
//     var map = new kakao.maps.Map(mapContainer, mapOption);

//     // 주소-좌표 변환 객체를 생성합니다
//     var geocoder = new kakao.maps.services.Geocoder();
//   }

//   handleloc = e => {
//     e.preventDefault();
//     console.log(e.target.LatLng);
//     const { kakao } = window;
//     var infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });

//     var mapContainer = this.input, // 지도를 표시할 div
//       mapOption = {
//         center: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표
//         level: 3 // 지도의 확대 레벨
//       };
//     this.setState({ loc: mapOption.center }, () => console.log(this.state.loc));
//     // 지도를 생성합니다
//     var map = new kakao.maps.Map(mapContainer, mapOption);

//     // 장소 검색 객체를 생성합니다
//     var ps = new kakao.maps.services.Places();

//     // 키워드로 장소를 검색합니다

//     // 키워드 검색 완료 시 호출되는 콜백함수 입니다
//     const placesSearchCB = (data, status, pagination) => {
//       if (status === kakao.maps.services.Status.OK) {
//         // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해
//         // LatLngBounds 객체에 좌표를 추가합니다
//         var bounds = new kakao.maps.LatLngBounds();

//         for (var i = 0; i < data.length; i++) {
//           displayMarker(data[i]);
//           bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));
//           this.setState({ latlng: this.state.latlng.concat(bounds.extend) });
//         }

//         // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다
//         map.setBounds(bounds);
//         console.log(map.setBounds(bounds));
//       }
//     };
//     ps.keywordSearch(this.state.search, placesSearchCB);
//     // 지도에 마커를 표시하는 함수입니다
//     const displayMarker = place => {
//       // 마커를 생성하고 지도에 표시합니다
//       var marker = new kakao.maps.Marker({
//         map: map,
//         position: new kakao.maps.LatLng(place.y, place.x)
//       });

//       // 마커에 클릭이벤트를 등록합니다
//       kakao.maps.event.addListener(marker, "click", () => {
//         // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다
//         infowindow.setContent(
//           '<div style="padding:5px;font-size:12px;">' +
//             place.place_name +
//             "</div>"
//         );
//         infowindow.open(map, marker);
//       });
//     };
//   };

//   handleText = e => {
//     this.setState({ search: e.target.value }, () => {
//       console.log(this.state.search);
//     });
//   };
//   render() {
//     return (
//       <form onSubmit={this.handleloc}>
//         <input
//           type="text"
//           value={this.state.search}
//           onChange={this.handleText}
//         />
//         <div
//           ref={ref => {
//             this.input = ref;
//           }}
//           id="map"
//           style={{ width: "100%", height: "350px" }}
//         ></div>
//       </form>
//     );
//   }
// }

// export default Maps;
